/home/spyre/.virtualenvs/angr/bin/python /home/spyre/Documents/Projects/bin-retroperm/progress/data.py
{'angr.unconstrained': {'unconstrained()': <class 'angr.procedures.java.unconstrained.UnconstrainedMethod'>},
 'cgc': {'_terminate': <class 'angr.procedures.cgc._terminate._terminate'>,
         'allocate': <class 'angr.procedures.cgc.allocate.allocate'>,
         'deallocate': <class 'angr.procedures.cgc.deallocate.deallocate'>,
         'fdwait': <class 'angr.procedures.cgc.fdwait.fdwait'>,
         'random': <class 'angr.procedures.cgc.random.random'>,
         'receive': <class 'angr.procedures.cgc.receive.receive'>,
         'transmit': <class 'angr.procedures.cgc.transmit.transmit'>},
 'glibc': {'__ctype_b_loc': <class 'angr.procedures.glibc.__ctype_b_loc.__ctype_b_loc'>,
           '__ctype_tolower_loc': <class 'angr.procedures.glibc.__ctype_tolower_loc.__ctype_tolower_loc'>,
           '__ctype_toupper_loc': <class 'angr.procedures.glibc.__ctype_toupper_loc.__ctype_toupper_loc'>,
           '__errno_location': <class 'angr.procedures.glibc.__errno_location.__errno_location'>,
           '__isoc99_fscanf': <class 'angr.procedures.glibc.scanf.__isoc99_fscanf'>,
           '__isoc99_scanf': <class 'angr.procedures.glibc.scanf.__isoc99_scanf'>,
           '__isoc99_sscanf': <class 'angr.procedures.glibc.sscanf.__isoc99_sscanf'>,
           '__libc_init': <class 'angr.procedures.glibc.__libc_init.__libc_init'>,
           '__libc_start_main': <class 'angr.procedures.glibc.__libc_start_main.__libc_start_main'>,
           '_dl_vdso_vsym': <class 'angr.procedures.glibc.dynamic_loading._dl_vdso_vsym'>,
           'fscanf': <class 'angr.procedures.libc.fscanf.fscanf'>,
           'scanf': <class 'angr.procedures.libc.scanf.scanf'>,
           'sscanf': <class 'angr.procedures.libc.sscanf.sscanf'>},
 'gnulib': {'xalloc_die': <class 'angr.procedures.gnulib.xalloc_die.xalloc_die'>,
            'xstrtol_fatal': <class 'angr.procedures.gnulib.xstrtol_fatal.xstrtol_fatal'>},
 'java': {'JavaSimProcedure': <class 'angr.procedures.java.JavaSimProcedure'>},
 'java.io.InputStream': {'read()': <class 'angr.procedures.java_io.read.Read'>},
 'java.io.PrintStream': {'write(int)': <class 'angr.procedures.java_io.write.Write'>},
 'java.lang.Character': {'isDigit(char)': <class 'angr.procedures.java_lang.character.CharacterIsDigit'>,
                         'isSpaceChar(char)': <class 'angr.procedures.java_lang.character.CharacterIsSpaceChar'>},
 'java.lang.Class': {'getSimpleName()': <class 'angr.procedures.java_lang.getsimplename.GetSimpleName'>},
 'java.lang.Double': {'parseDouble(java.lang.String)': <class 'angr.procedures.java_lang.double.ParseDouble'>},
 'java.lang.Integer': {'<init>(int)': <class 'angr.procedures.java_lang.integer.IntToInteger'>,
                       'intValue()': <class 'angr.procedures.java_lang.integer.IntegerToInt'>,
                       'toString(int)': <class 'angr.procedures.java_lang.integer.IntegerToString'>,
                       'valueOf(int)': <class 'angr.procedures.java_lang.integer.IntegerValueOf'>},
 'java.lang.Math': {'random': <class 'angr.procedures.java_lang.math.Random'>},
 'java.lang.String': {'charAt(int)': <class 'angr.procedures.java_lang.string.StringCharAt'>,
                      'concat(java.lang.String)': <class 'angr.procedures.java_lang.string.StringConcat'>,
                      'equals(java.lang.Object)': <class 'angr.procedures.java_lang.string.StringEquals'>,
                      'length()': <class 'angr.procedures.java_lang.string.StringLength'>,
                      'split(java.lang.String)': <class 'angr.procedures.java_lang.string.StringSplit'>},
 'java.lang.StringBuilder': {'<init>()': <class 'angr.procedures.java_lang.stringbuilder.StringBuilderInit'>,
                             'append(int)': <class 'angr.procedures.java_lang.stringbuilder.StringBuilderAppend'>,
                             'append(java.lang.String)': <class 'angr.procedures.java_lang.stringbuilder.StringBuilderAppend'>},
 'java.lang.System': {'currentTimeMillis()': <class 'angr.procedures.java_lang.system.SystemCurrentTimeMillis'>,
                      'exit(int)': <class 'angr.procedures.java_lang.exit.Exit'>,
                      'loadLibrary(java.lang.String)': <class 'angr.procedures.java_lang.load_library.LoadLibrary'>},
 'java.util.AbstractSequentialList': {'iterator()': <class 'angr.procedures.java_util.collection.GetIterator'>},
 'java.util.Collection': {'iterator()': <class 'angr.procedures.java_util.collection.GetIterator'>},
 'java.util.HashMap': {'<init>()': <class 'angr.procedures.java_util.map.MapInit'>,
                       'containsKey(java.lang.Object)': <class 'angr.procedures.java_util.map.MapContainsKey'>,
                       'get(java.lang.Object)': <class 'angr.procedures.java_util.map.MapGet'>,
                       'keySet()': <class 'angr.procedures.java_util.map.MapKeySet'>,
                       'put(java.lang.Object,java.lang.Object)': <class 'angr.procedures.java_util.map.MapPut'>,
                       'size()': <class 'angr.procedures.java_util.map.MapSize'>},
 'java.util.Iterator': {'hasNext()': <class 'angr.procedures.java_util.iterator.IteratorHasNext'>,
                        'next()': <class 'angr.procedures.java_util.iterator.IteratorNext'>},
 'java.util.LinkedList': {'<init>()': <class 'angr.procedures.java_util.list.ListInit'>,
                          'add(java.lang.Object)': <class 'angr.procedures.java_util.list.ListAdd'>,
                          'get(int)': <class 'angr.procedures.java_util.list.ListGet'>,
                          'getFirst()': <class 'angr.procedures.java_util.list.ListGetFirst'>,
                          'iterator()': <class 'angr.procedures.java_util.collection.GetIterator'>,
                          'size()': <class 'angr.procedures.java_util.list.ListSize'>},
 'java.util.List': {'<init>()': <class 'angr.procedures.java_util.list.ListInit'>,
                    'add(java.lang.Object)': <class 'angr.procedures.java_util.list.ListAdd'>,
                    'get(int)': <class 'angr.procedures.java_util.list.ListGet'>,
                    'iterator()': <class 'angr.procedures.java_util.collection.GetIterator'>,
                    'size()': <class 'angr.procedures.java_util.list.ListSize'>},
 'java.util.Map': {'<init>()': <class 'angr.procedures.java_util.map.MapInit'>,
                   'containsKey(java.lang.Object)': <class 'angr.procedures.java_util.map.MapContainsKey'>,
                   'get(java.lang.Object)': <class 'angr.procedures.java_util.map.MapGet'>,
                   'keySet()': <class 'angr.procedures.java_util.map.MapKeySet'>,
                   'put(java.lang.Object,java.lang.Object)': <class 'angr.procedures.java_util.map.MapPut'>,
                   'size()': <class 'angr.procedures.java_util.map.MapSize'>},
 'java.util.Random': {'nextInt(int)': <class 'angr.procedures.java_util.random.NextInt'>},
 'java.util.Scanner': {'nextLine()': <class 'angr.procedures.java_util.scanner_nextline.ScannerNextLine'>},
 'java.util.Set': {'iterator()': <class 'angr.procedures.java_util.collection.GetIterator'>},
 'java_io': {'JavaSimProcedure': <class 'angr.procedures.java.JavaSimProcedure'>},
 'java_jni': {'AllocObject': <class 'angr.procedures.java_jni.object_operations.AllocObject'>,
              'CallBooleanMethod': <class 'angr.procedures.java_jni.method_calls.CallBooleanMethod'>,
              'CallBooleanMethodA': <class 'angr.procedures.java_jni.method_calls.CallBooleanMethodA'>,
              'CallByteMethod': <class 'angr.procedures.java_jni.method_calls.CallByteMethod'>,
              'CallByteMethodA': <class 'angr.procedures.java_jni.method_calls.CallByteMethodA'>,
              'CallCharMethod': <class 'angr.procedures.java_jni.method_calls.CallCharMethod'>,
              'CallCharMethodA': <class 'angr.procedures.java_jni.method_calls.CallCharMethodA'>,
              'CallIntMethod': <class 'angr.procedures.java_jni.method_calls.CallIntMethod'>,
              'CallIntMethodA': <class 'angr.procedures.java_jni.method_calls.CallIntMethodA'>,
              'CallLongMethod': <class 'angr.procedures.java_jni.method_calls.CallLongMethod'>,
              'CallLongMethodA': <class 'angr.procedures.java_jni.method_calls.CallLongMethodA'>,
              'CallMethod': <class 'angr.procedures.java_jni.method_calls.CallMethod'>,
              'CallMethodA': <class 'angr.procedures.java_jni.method_calls.CallMethodA'>,
              'CallMethodBase': <class 'angr.procedures.java_jni.method_calls.CallMethodBase'>,
              'CallNonvirtualBooleanMethod': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualBooleanMethod'>,
              'CallNonvirtualBooleanMethodA': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualBooleanMethodA'>,
              'CallNonvirtualByteMethod': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualByteMethod'>,
              'CallNonvirtualByteMethodA': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualByteMethodA'>,
              'CallNonvirtualCharMethod': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualCharMethod'>,
              'CallNonvirtualCharMethodA': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualCharMethodA'>,
              'CallNonvirtualIntMethod': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualIntMethod'>,
              'CallNonvirtualIntMethodA': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualIntMethodA'>,
              'CallNonvirtualLongMethod': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualLongMethod'>,
              'CallNonvirtualLongMethodA': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualLongMethodA'>,
              'CallNonvirtualMethod': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualMethod'>,
              'CallNonvirtualMethodA': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualMethodA'>,
              'CallNonvirtualObjectMethod': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualObjectMethod'>,
              'CallNonvirtualObjectMethodA': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualObjectMethodA'>,
              'CallNonvirtualShortMethod': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualShortMethod'>,
              'CallNonvirtualShortMethodA': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualShortMethodA'>,
              'CallNonvirtualVoidMethod': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualVoidMethod'>,
              'CallNonvirtualVoidMethodA': <class 'angr.procedures.java_jni.method_calls.CallNonvirtualVoidMethodA'>,
              'CallObjectMethod': <class 'angr.procedures.java_jni.method_calls.CallObjectMethod'>,
              'CallObjectMethodA': <class 'angr.procedures.java_jni.method_calls.CallObjectMethodA'>,
              'CallShortMethod': <class 'angr.procedures.java_jni.method_calls.CallShortMethod'>,
              'CallShortMethodA': <class 'angr.procedures.java_jni.method_calls.CallShortMethodA'>,
              'CallStaticBooleanMethod': <class 'angr.procedures.java_jni.method_calls.CallStaticBooleanMethod'>,
              'CallStaticBooleanMethodA': <class 'angr.procedures.java_jni.method_calls.CallStaticBooleanMethodA'>,
              'CallStaticByteMethod': <class 'angr.procedures.java_jni.method_calls.CallStaticByteMethod'>,
              'CallStaticByteMethodA': <class 'angr.procedures.java_jni.method_calls.CallStaticByteMethodA'>,
              'CallStaticCharMethod': <class 'angr.procedures.java_jni.method_calls.CallStaticCharMethod'>,
              'CallStaticCharMethodA': <class 'angr.procedures.java_jni.method_calls.CallStaticCharMethodA'>,
              'CallStaticIntMethod': <class 'angr.procedures.java_jni.method_calls.CallStaticIntMethod'>,
              'CallStaticIntMethodA': <class 'angr.procedures.java_jni.method_calls.CallStaticIntMethodA'>,
              'CallStaticLongMethod': <class 'angr.procedures.java_jni.method_calls.CallStaticLongMethod'>,
              'CallStaticLongMethodA': <class 'angr.procedures.java_jni.method_calls.CallStaticLongMethodA'>,
              'CallStaticMethod': <class 'angr.procedures.java_jni.method_calls.CallStaticMethod'>,
              'CallStaticMethodA': <class 'angr.procedures.java_jni.method_calls.CallStaticMethodA'>,
              'CallStaticObjectMethod': <class 'angr.procedures.java_jni.method_calls.CallStaticObjectMethod'>,
              'CallStaticObjectMethodA': <class 'angr.procedures.java_jni.method_calls.CallStaticObjectMethodA'>,
              'CallStaticShortMethod': <class 'angr.procedures.java_jni.method_calls.CallStaticShortMethod'>,
              'CallStaticShortMethodA': <class 'angr.procedures.java_jni.method_calls.CallStaticShortMethodA'>,
              'CallStaticVoidMethod': <class 'angr.procedures.java_jni.method_calls.CallStaticVoidMethod'>,
              'CallStaticVoidMethodA': <class 'angr.procedures.java_jni.method_calls.CallStaticVoidMethodA'>,
              'CallVoidMethod': <class 'angr.procedures.java_jni.method_calls.CallVoidMethod'>,
              'CallVoidMethodA': <class 'angr.procedures.java_jni.method_calls.CallVoidMethodA'>,
              'DeleteGlobalRef': <class 'angr.procedures.java_jni.global_and_local_refs.DeleteGlobalRef'>,
              'DeleteLocalRef': <class 'angr.procedures.java_jni.global_and_local_refs.DeleteLocalRef'>,
              'FindClass': <class 'angr.procedures.java_jni.class_and_interface_operations.FindClass'>,
              'GetArrayElements': <class 'angr.procedures.java_jni.array_operations.GetArrayElements'>,
              'GetArrayLength': <class 'angr.procedures.java_jni.array_operations.GetArrayLength'>,
              'GetArrayRegion': <class 'angr.procedures.java_jni.array_operations.GetArrayRegion'>,
              'GetBooleanField': <class 'angr.procedures.java_jni.field_access.GetBooleanField'>,
              'GetByteField': <class 'angr.procedures.java_jni.field_access.GetByteField'>,
              'GetCharField': <class 'angr.procedures.java_jni.field_access.GetCharField'>,
              'GetField': <class 'angr.procedures.java_jni.field_access.GetField'>,
              'GetFieldID': <class 'angr.procedures.java_jni.field_access.GetFieldID'>,
              'GetIntField': <class 'angr.procedures.java_jni.field_access.GetIntField'>,
              'GetLongField': <class 'angr.procedures.java_jni.field_access.GetLongField'>,
              'GetMethodID': <class 'angr.procedures.java_jni.method_calls.GetMethodID'>,
              'GetObjectArrayElement': <class 'angr.procedures.java_jni.array_operations.GetObjectArrayElement'>,
              'GetObjectClass': <class 'angr.procedures.java_jni.object_operations.GetObjectClass'>,
              'GetObjectField': <class 'angr.procedures.java_jni.field_access.GetObjectField'>,
              'GetShortField': <class 'angr.procedures.java_jni.field_access.GetShortField'>,
              'GetStaticBooleanField': <class 'angr.procedures.java_jni.field_access.GetStaticBooleanField'>,
              'GetStaticByteField': <class 'angr.procedures.java_jni.field_access.GetStaticByteField'>,
              'GetStaticCharField': <class 'angr.procedures.java_jni.field_access.GetStaticCharField'>,
              'GetStaticField': <class 'angr.procedures.java_jni.field_access.GetStaticField'>,
              'GetStaticIntField': <class 'angr.procedures.java_jni.field_access.GetStaticIntField'>,
              'GetStaticLongField': <class 'angr.procedures.java_jni.field_access.GetStaticLongField'>,
              'GetStaticObjectField': <class 'angr.procedures.java_jni.field_access.GetStaticObjectField'>,
              'GetStaticShortField': <class 'angr.procedures.java_jni.field_access.GetStaticShortField'>,
              'GetStringUTFChars': <class 'angr.procedures.java_jni.string_operations.GetStringUTFChars'>,
              'GetStringUTFLength': <class 'angr.procedures.java_jni.string_operations.GetStringUTFLength'>,
              'GetSuperclass': <class 'angr.procedures.java_jni.class_and_interface_operations.GetSuperclass'>,
              'GetVersion': <class 'angr.procedures.java_jni.version_information.GetVersion'>,
              'IsInstanceOf': <class 'angr.procedures.java_jni.object_operations.IsInstanceOf'>,
              'IsSameObject': <class 'angr.procedures.java_jni.object_operations.IsSameObject'>,
              'JNISimProcedure': <class 'angr.procedures.java_jni.JNISimProcedure'>,
              'NewArray': <class 'angr.procedures.java_jni.array_operations.NewArray'>,
              'NewBooleanArray': <class 'angr.procedures.java_jni.array_operations.NewBooleanArray'>,
              'NewByteArray': <class 'angr.procedures.java_jni.array_operations.NewByteArray'>,
              'NewCharArray': <class 'angr.procedures.java_jni.array_operations.NewCharArray'>,
              'NewGlobalRef': <class 'angr.procedures.java_jni.global_and_local_refs.NewGlobalRef'>,
              'NewIntArray': <class 'angr.procedures.java_jni.array_operations.NewIntArray'>,
              'NewLocalRef': <class 'angr.procedures.java_jni.global_and_local_refs.NewLocalRef'>,
              'NewLongArray': <class 'angr.procedures.java_jni.array_operations.NewLongArray'>,
              'NewObject': <class 'angr.procedures.java_jni.object_operations.NewObject'>,
              'NewObjectArray': <class 'angr.procedures.java_jni.array_operations.NewObjectArray'>,
              'NewShortArray': <class 'angr.procedures.java_jni.array_operations.NewShortArray'>,
              'NewStringUTF': <class 'angr.procedures.java_jni.string_operations.NewStringUTF'>,
              'ReleaseArrayElements': <class 'angr.procedures.java_jni.array_operations.ReleaseArrayElements'>,
              'ReleaseStringUTFChars': <class 'angr.procedures.java_jni.string_operations.ReleaseStringUTFChars'>,
              'SetArrayRegion': <class 'angr.procedures.java_jni.array_operations.SetArrayRegion'>,
              'SetField': <class 'angr.procedures.java_jni.field_access.SetField'>,
              'SetObjectArrayElement': <class 'angr.procedures.java_jni.array_operations.SetObjectArrayElement'>,
              'SetStaticField': <class 'angr.procedures.java_jni.field_access.SetStaticField'>,
              'UnsupportedJNIFunction': <class 'angr.procedures.java_jni.not_implemented.UnsupportedJNIFunction'>},
 'java_lang': {'JavaSimProcedure': <class 'angr.procedures.java.JavaSimProcedure'>},
 'java_util': {'JavaSimProcedure': <class 'angr.procedures.java.JavaSimProcedure'>},
 'libc': {'FormatParser': <class 'angr.procedures.stubs.format_parser.FormatParser'>,
          'ScanfFormatParser': <class 'angr.procedures.stubs.format_parser.ScanfFormatParser'>,
          '__getdelim': <class 'angr.procedures.libc.getdelim.__getdelim'>,
          '__printf_chk': <class 'angr.procedures.libc.printf.__printf_chk'>,
          '__snprintf_chk': <class 'angr.procedures.libc.snprintf.__snprintf_chk'>,
          'abort': <class 'angr.procedures.libc.abort.abort'>,
          'access': <class 'angr.procedures.libc.access.access'>,
          'atoi': <class 'angr.procedures.libc.atoi.atoi'>,
          'atol': <class 'angr.procedures.libc.atol.atol'>,
          'calloc': <class 'angr.procedures.libc.calloc.calloc'>,
          'closelog': <class 'angr.procedures.libc.closelog.closelog'>,
          'err': <class 'angr.procedures.libc.err.err'>,
          'error': <class 'angr.procedures.libc.error.error'>,
          'exit': <class 'angr.procedures.libc.exit.exit'>,
          'fclose': <class 'angr.procedures.libc.fclose.fclose'>,
          'feof': <class 'angr.procedures.libc.feof.feof'>,
          'feof_unlocked': <class 'angr.procedures.libc.feof.feof'>,
          'fflush': <class 'angr.procedures.libc.fflush.fflush'>,
          'fflush_unlocked': <class 'angr.procedures.libc.fflush.fflush'>,
          'fgetc': <class 'angr.procedures.libc.fgetc.fgetc'>,
          'fgetc_unlocked': <class 'angr.procedures.libc.fgetc.fgetc'>,
          'fgets': <class 'angr.procedures.libc.fgets.fgets'>,
          'fgets_unlocked': <class 'angr.procedures.libc.fgets.fgets'>,
          'fopen': <class 'angr.procedures.libc.fopen.fopen'>,
          'fprintf': <class 'angr.procedures.libc.fprintf.fprintf'>,
          'fputc': <class 'angr.procedures.libc.fputc.fputc'>,
          'fputc_unlocked': <class 'angr.procedures.libc.fputc.fputc'>,
          'fputs': <class 'angr.procedures.libc.fputs.fputs'>,
          'fputs_unlocked': <class 'angr.procedures.libc.fputs.fputs'>,
          'fread': <class 'angr.procedures.libc.fread.fread'>,
          'fread_unlocked': <class 'angr.procedures.libc.fread.fread'>,
          'free': <class 'angr.procedures.libc.free.free'>,
          'fscanf': <class 'angr.procedures.libc.fscanf.fscanf'>,
          'fseek': <class 'angr.procedures.libc.fseek.fseek'>,
          'fseeko': <class 'angr.procedures.libc.fseek.fseek'>,
          'ftell': <class 'angr.procedures.libc.ftell.ftell'>,
          'ftello': <class 'angr.procedures.libc.ftell.ftell'>,
          'fwrite': <class 'angr.procedures.libc.fwrite.fwrite'>,
          'fwrite_unlocked': <class 'angr.procedures.libc.fwrite.fwrite'>,
          'getc': <class 'angr.procedures.libc.fgetc.fgetc'>,
          'getc_unlocked': <class 'angr.procedures.libc.fgetc.fgetc'>,
          'getchar': <class 'angr.procedures.libc.getchar.getchar'>,
          'getchar_unlocked': <class 'angr.procedures.libc.getchar.getchar'>,
          'getegid': <class 'angr.procedures.libc.getegid.getegid'>,
          'geteuid': <class 'angr.procedures.libc.geteuid.geteuid'>,
          'getgid': <class 'angr.procedures.libc.getgid.getgid'>,
          'gets': <class 'angr.procedures.libc.gets.gets'>,
          'getuid': <class 'angr.procedures.libc.getuid.getuid'>,
          'malloc': <class 'angr.procedures.libc.malloc.malloc'>,
          'memcmp': <class 'angr.procedures.libc.memcmp.memcmp'>,
          'memcpy': <class 'angr.procedures.libc.memcpy.memcpy'>,
          'memset': <class 'angr.procedures.libc.memset.memset'>,
          'openlog': <class 'angr.procedures.libc.openlog.openlog'>,
          'perror': <class 'angr.procedures.libc.perror.perror'>,
          'printf': <class 'angr.procedures.libc.printf.printf'>,
          'putc': <class 'angr.procedures.libc.fputc.fputc'>,
          'putc_unlocked': <class 'angr.procedures.libc.fputc.fputc'>,
          'putchar': <class 'angr.procedures.libc.putchar.putchar'>,
          'puts': <class 'angr.procedures.libc.puts.puts'>,
          'rand': <class 'angr.procedures.libc.rand.rand'>,
          'realloc': <class 'angr.procedures.libc.realloc.realloc'>,
          'rewind': <class 'angr.procedures.libc.rewind.rewind'>,
          'scanf': <class 'angr.procedures.libc.scanf.scanf'>,
          'setbuf': <class 'angr.procedures.libc.setbuf.setbuf'>,
          'setvbuf': <class 'angr.procedures.libc.setvbuf.setvbuf'>,
          'snprintf': <class 'angr.procedures.libc.snprintf.snprintf'>,
          'sprintf': <class 'angr.procedures.libc.sprintf.sprintf'>,
          'srand': <class 'angr.procedures.libc.srand.srand'>,
          'sscanf': <class 'angr.procedures.libc.sscanf.sscanf'>,
          'stpcpy': <class 'angr.procedures.libc.stpcpy.stpcpy'>,
          'strcat': <class 'angr.procedures.libc.strcat.strcat'>,
          'strchr': <class 'angr.procedures.libc.strchr.strchr'>,
          'strcmp': <class 'angr.procedures.libc.strcmp.strcmp'>,
          'strcpy': <class 'angr.procedures.libc.strcpy.strcpy'>,
          'strlen': <class 'angr.procedures.libc.strlen.strlen'>,
          'strncat': <class 'angr.procedures.libc.strncat.strncat'>,
          'strncmp': <class 'angr.procedures.libc.strncmp.strncmp'>,
          'strncpy': <class 'angr.procedures.libc.strncpy.strncpy'>,
          'strnlen': <class 'angr.procedures.libc.strnlen.strnlen'>,
          'strstr': <class 'angr.procedures.libc.strstr.strstr'>,
          'strtol': <class 'angr.procedures.libc.strtol.strtol'>,
          'strtoul': <class 'angr.procedures.libc.strtoul.strtoul'>,
          'system': <class 'angr.procedures.libc.system.system'>,
          'time': <class 'angr.procedures.libc.time.time'>,
          'tmpnam': <class 'angr.procedures.libc.tmpnam.tmpnam'>,
          'tolower': <class 'angr.procedures.libc.tolower.tolower'>,
          'toupper': <class 'angr.procedures.libc.toupper.toupper'>,
          'ungetc': <class 'angr.procedures.libc.ungetc.ungetc'>,
          'vsnprintf': <class 'angr.procedures.libc.vsnprintf.vsnprintf'>,
          'wcscasecmp': <class 'angr.procedures.libc.wchar.wcscasecmp'>,
          'wcscmp': <class 'angr.procedures.libc.wchar.wcscmp'>},
 'libstdcpp': {'_Unwind_Resume': <class 'angr.procedures.libstdcpp._unwind_resume._Unwind_Resume'>,
               'std::__throw_bad_alloc()': <class 'angr.procedures.libstdcpp.std____throw_bad_alloc.std____throw_bad_cast'>,
               'std::__throw_bad_cast()': <class 'angr.procedures.libstdcpp.std____throw_bad_cast.std____throw_bad_cast'>,
               'std::__throw_length_error(char const*)': <class 'angr.procedures.libstdcpp.std____throw_length_error.std____throw_logic_error'>,
               'std::__throw_logic_error(char const*)': <class 'angr.procedures.libstdcpp.std____throw_logic_error.std____throw_logic_error'>,
               'std::terminate()': <class 'angr.procedures.libstdcpp.std__terminate.std__terminate'>,
               'std____throw_bad_cast': <class 'angr.procedures.libstdcpp.std____throw_bad_cast.std____throw_bad_cast'>,
               'std____throw_logic_error': <class 'angr.procedures.libstdcpp.std____throw_logic_error.std____throw_logic_error'>,
               'std__terminate': <class 'angr.procedures.libstdcpp.std__terminate.std__terminate'>},
 'linux_kernel': {'_kuser_cmpxchg': <class 'angr.procedures.linux_kernel.arm_user_helpers._kuser_cmpxchg'>,
                  '_kuser_cmpxchg64': <class 'angr.procedures.linux_kernel.arm_user_helpers._kuser_cmpxchg64'>,
                  '_kuser_helper_get_tls': <class 'angr.procedures.linux_kernel.arm_user_helpers._kuser_helper_get_tls'>,
                  '_kuser_helper_version': <class 'angr.procedures.linux_kernel.arm_user_helpers._kuser_helper_version'>,
                  '_kuser_memory_barrier': <class 'angr.procedures.linux_kernel.arm_user_helpers._kuser_memory_barrier'>,
                  '_vsyscall': <class 'angr.procedures.linux_kernel.vsyscall._vsyscall'>,
                  'access': <class 'angr.procedures.linux_kernel.access.access'>,
                  'arch_prctl': <class 'angr.procedures.linux_kernel.arch_prctl.arch_prctl'>,
                  'brk': <class 'angr.procedures.linux_kernel.brk.brk'>,
                  'chdir': <class 'angr.procedures.linux_kernel.cwd.chdir'>,
                  'fstat': <class 'angr.procedures.linux_kernel.fstat.fstat'>,
                  'fstat64': <class 'angr.procedures.linux_kernel.fstat64.fstat64'>,
                  'futex': <class 'angr.procedures.linux_kernel.futex.futex'>,
                  'getcwd': <class 'angr.procedures.linux_kernel.cwd.getcwd'>,
                  'getegid': <class 'angr.procedures.linux_kernel.getegid.getegid'>,
                  'getegid32': <class 'angr.procedures.linux_kernel.getegid.getegid32'>,
                  'geteuid': <class 'angr.procedures.linux_kernel.geteuid.geteuid'>,
                  'geteuid32': <class 'angr.procedures.linux_kernel.geteuid.geteuid32'>,
                  'getgid': <class 'angr.procedures.linux_kernel.uid.getgid'>,
                  'getgid32': <class 'angr.procedures.linux_kernel.getgid.getgid32'>,
                  'getpid': <class 'angr.procedures.linux_kernel.getpid.getpid'>,
                  'getppid': <class 'angr.procedures.linux_kernel.getpid.getppid'>,
                  'getresgid': <class 'angr.procedures.linux_kernel.uid.getresgid'>,
                  'getresuid': <class 'angr.procedures.linux_kernel.uid.getresuid'>,
                  'getrlimit': <class 'angr.procedures.linux_kernel.getrlimit.getrlimit'>,
                  'gettid': <class 'angr.procedures.linux_kernel.gettid.gettid'>,
                  'getuid': <class 'angr.procedures.linux_kernel.uid.getuid'>,
                  'getuid32': <class 'angr.procedures.linux_kernel.getuid.getuid32'>,
                  'lseek': <class 'angr.procedures.linux_kernel.lseek.lseek'>,
                  'mmap': <class 'angr.procedures.posix.mmap.mmap'>,
                  'mmap2': <class 'angr.procedures.linux_kernel.mmap.mmap2'>,
                  'mprotect': <class 'angr.procedures.linux_kernel.mprotect.mprotect'>,
                  'munmap': <class 'angr.procedures.linux_kernel.munmap.munmap'>,
                  'old_mmap': <class 'angr.procedures.linux_kernel.mmap.old_mmap'>,
                  'openat': <class 'angr.procedures.linux_kernel.openat.openat'>,
                  'read': <class 'angr.procedures.posix.read.read'>,
                  'readv': <class 'angr.procedures.linux_kernel.iovec.readv'>,
                  'rt_sigaction': <class 'angr.procedures.linux_kernel.sigaction.rt_sigaction'>,
                  'set_tid_address': <class 'angr.procedures.linux_kernel.set_tid_address.set_tid_address'>,
                  'sigaction': <class 'angr.procedures.linux_kernel.sigaction.sigaction'>,
                  'sigprocmask': <class 'angr.procedures.linux_kernel.sigprocmask.sigprocmask'>,
                  'stat': <class 'angr.procedures.linux_kernel.stat.stat'>,
                  'sysinfo': <class 'angr.procedures.linux_kernel.sysinfo.sysinfo'>,
                  'tgkill': <class 'angr.procedures.linux_kernel.tgkill.tgkill'>,
                  'time': <class 'angr.procedures.linux_kernel.time.time'>,
                  'ugetrlimit': <class 'angr.procedures.linux_kernel.getrlimit.ugetrlimit'>,
                  'uname': <class 'angr.procedures.linux_kernel.uname.uname'>,
                  'unlink': <class 'angr.procedures.linux_kernel.unlink.unlink'>,
                  'write': <class 'angr.procedures.posix.write.write'>,
                  'writev': <class 'angr.procedures.linux_kernel.iovec.writev'>},
 'linux_loader': {'IFuncResolver': <class 'angr.procedures.linux_loader.sim_loader.IFuncResolver'>,
                  'LinuxLoader': <class 'angr.procedures.linux_loader.sim_loader.LinuxLoader'>,
                  '___tls_get_addr': <class 'angr.procedures.linux_loader.tls.___tls_get_addr'>,
                  '__tls_get_addr': <class 'angr.procedures.linux_loader.tls.__tls_get_addr'>,
                  '_dl_get_tls_static_info': <class 'angr.procedures.linux_loader.tls._dl_get_tls_static_info'>,
                  '_dl_initial_error_catch_tsd': <class 'angr.procedures.linux_loader._dl_initial_error_catch_tsd._dl_initial_error_catch_tsd'>,
                  '_dl_rtld_lock_recursive': <class 'angr.procedures.linux_loader._dl_rtld_lock._dl_rtld_lock_recursive'>,
                  '_dl_rtld_unlock_recursive': <class 'angr.procedures.linux_loader._dl_rtld_lock._dl_rtld_unlock_recursive'>,
                  'tlsdesc_resolver': <class 'angr.procedures.linux_loader.tls.tlsdesc_resolver'>},
 'msvcr': {'__getmainargs': <class 'angr.procedures.msvcr.__getmainargs.__getmainargs'>,
           '__p__commode': <class 'angr.procedures.msvcr.fmode.__p__commode'>,
           '__p__fmode': <class 'angr.procedures.msvcr.fmode.__p__fmode'>,
           '_get_fmode': <class 'angr.procedures.msvcr.fmode._get_fmode'>,
           '_initterm': <class 'angr.procedures.msvcr._initterm._initterm'>,
           '_set_fmode': <class 'angr.procedures.msvcr.fmode._set_fmode'>},
 'ntdll': {'KiUserExceptionDispatcher': <class 'angr.procedures.ntdll.exceptions.KiUserExceptionDispatcher'>},
 'posix': {'FormatParser': <class 'angr.procedures.stubs.format_parser.FormatParser'>,
           'accept': <class 'angr.procedures.posix.accept.accept'>,
           'bind': <class 'angr.procedures.posix.bind.bind'>,
           'bzero': <class 'angr.procedures.posix.bzero.bzero'>,
           'chroot': <class 'angr.procedures.posix.chroot.chroot'>,
           'clock_gettime': <class 'angr.procedures.posix.sim_time.clock_gettime'>,
           'close': <class 'angr.procedures.posix.close.close'>,
           'closedir': <class 'angr.procedures.posix.closedir.closedir'>,
           'dup': <class 'angr.procedures.posix.dup.dup'>,
           'dup2': <class 'angr.procedures.posix.dup.dup2'>,
           'dup3': <class 'angr.procedures.posix.dup.dup3'>,
           'fcntl': <class 'angr.procedures.posix.fcntl.fcntl'>,
           'fdopen': <class 'angr.procedures.posix.fdopen.fdopen'>,
           'fileno': <class 'angr.procedures.posix.fileno.fileno'>,
           'fileno_unlocked': <class 'angr.procedures.posix.fileno.fileno'>,
           'fork': <class 'angr.procedures.posix.fork.fork'>,
           'getenv': <class 'angr.procedures.posix.getenv.getenv'>,
           'gethostbyname': <class 'angr.procedures.posix.gethostbyname.gethostbyname'>,
           'getpass': <class 'angr.procedures.posix.getpass.getpass'>,
           'getsockopt': <class 'angr.procedures.posix.getsockopt.getsockopt'>,
           'gettimeofday': <class 'angr.procedures.posix.sim_time.gettimeofday'>,
           'htonl': <class 'angr.procedures.posix.htonl.htonl'>,
           'htons': <class 'angr.procedures.posix.htons.htons'>,
           'inet_ntoa': <class 'angr.procedures.posix.inet_ntoa.inet_ntoa'>,
           'listen': <class 'angr.procedures.posix.listen.listen'>,
           'mmap': <class 'angr.procedures.posix.mmap.mmap'>,
           'open': <class 'angr.procedures.posix.open.open'>,
           'opendir': <class 'angr.procedures.posix.opendir.opendir'>,
           'poll': <class 'angr.procedures.posix.poll.poll'>,
           'pread64': <class 'angr.procedures.posix.pread64.pread64'>,
           'pthread_cond_signal': <class 'angr.procedures.posix.pthread.pthread_cond_signal'>,
           'pthread_create': <class 'angr.procedures.posix.pthread.pthread_create'>,
           'pthread_mutex_lock': <class 'angr.procedures.posix.pthread.pthread_mutex_lock'>,
           'pthread_mutex_unlock': <class 'angr.procedures.posix.pthread.pthread_mutex_unlock'>,
           'pthread_once': <class 'angr.procedures.posix.pthread.pthread_once'>,
           'pwrite64': <class 'angr.procedures.posix.pwrite64.pwrite64'>,
           'read': <class 'angr.procedures.posix.read.read'>,
           'readdir': <class 'angr.procedures.posix.readdir.readdir'>,
           'recv': <class 'angr.procedures.posix.recv.recv'>,
           'recvfrom': <class 'angr.procedures.posix.recvfrom.recvfrom'>,
           'select': <class 'angr.procedures.posix.select.select'>,
           'send': <class 'angr.procedures.posix.send.send'>,
           'setsockopt': <class 'angr.procedures.posix.setsockopt.setsockopt'>,
           'sigaction': <class 'angr.procedures.posix.sigaction.sigaction'>,
           'sleep': <class 'angr.procedures.posix.sleep.sleep'>,
           'socket': <class 'angr.procedures.posix.socket.socket'>,
           'strcasecmp': <class 'angr.procedures.posix.strcasecmp.strcasecmp'>,
           'strdup': <class 'angr.procedures.posix.strdup.strdup'>,
           'strtok_r': <class 'angr.procedures.posix.strtok_r.strtok_r'>,
           'syslog': <class 'angr.procedures.posix.syslog.syslog'>,
           'tzset': <class 'angr.procedures.posix.tz.tzset'>,
           'unlink': <class 'angr.procedures.posix.unlink.unlink'>,
           'usleep': <class 'angr.procedures.posix.usleep.usleep'>,
           'write': <class 'angr.procedures.posix.write.write'>},
 'stubs': {'CallReturn': <class 'angr.procedures.stubs.CallReturn.CallReturn'>,
           'Caller': <class 'angr.procedures.stubs.caller.Caller'>,
           'FormatParser': <class 'angr.procedures.stubs.format_parser.FormatParser'>,
           'NoReturnUnconstrained': <class 'angr.procedures.stubs.NoReturnUnconstrained.NoReturnUnconstrained'>,
           'Nop': <class 'angr.procedures.stubs.Nop.Nop'>,
           'PathTerminator': <class 'angr.procedures.stubs.PathTerminator.PathTerminator'>,
           'Redirect': <class 'angr.procedures.stubs.Redirect.Redirect'>,
           'ReturnChar': <class 'angr.procedures.stubs.ReturnChar.ReturnChar'>,
           'ReturnUnconstrained': <class 'angr.procedures.stubs.ReturnUnconstrained.ReturnUnconstrained'>,
           'ScanfFormatParser': <class 'angr.procedures.stubs.format_parser.ScanfFormatParser'>,
           'SimProcedure': <class 'angr.sim_procedure.SimProcedure'>,
           'UnresolvableCallTarget': <class 'angr.procedures.stubs.UnresolvableCallTarget.UnresolvableCallTarget'>,
           'UnresolvableJumpTarget': <class 'angr.procedures.stubs.UnresolvableJumpTarget.UnresolvableJumpTarget'>,
           'UnresolvableTarget': <class 'angr.procedures.stubs.UnresolvableJumpTarget.UnresolvableJumpTarget'>,
           'UserHook': <class 'angr.procedures.stubs.UserHook.UserHook'>,
           'b64_decode': <class 'angr.procedures.stubs.b64_decode.b64_decode'>,
           'crazy_scanf': <class 'angr.procedures.stubs.crazy_scanf.crazy_scanf'>,
           'syscall': <class 'angr.procedures.stubs.syscall_stub.syscall'>},
 'testing': {'manyargs': <class 'angr.procedures.testing.manyargs.manyargs'>,
             'retreg': <class 'angr.procedures.testing.retreg.retreg'>},
 'tracer': {'orig_random': <class 'angr.procedures.cgc.random.random'>,
            'orig_receive': <class 'angr.procedures.cgc.receive.receive'>,
            'orig_transmit': <class 'angr.procedures.cgc.transmit.transmit'>,
            'random': <class 'angr.procedures.tracer.random.random'>,
            'receive': <class 'angr.procedures.tracer.receive.receive'>,
            'transmit': <class 'angr.procedures.tracer.transmit.transmit'>},
 'uclibc': {'__uClibc_main': <class 'angr.procedures.uclibc.__uClibc_main.__uClibc_main'>,
            'fucker': <class 'angr.procedures.glibc.__libc_start_main.__libc_start_main'>},
 'win32': {'CreateMutexA': <class 'angr.procedures.win32.mutex.CreateMutexA'>,
           'CreateMutexEx': <class 'angr.procedures.win32.mutex.CreateMutexEx'>,
           'EncodePointer': <class 'angr.procedures.win32.EncodePointer.EncodePointer'>,
           'ExitProcess': <class 'angr.procedures.win32.ExitProcess.ExitProcess'>,
           'FlsAlloc': <class 'angr.procedures.win32.local_storage.FlsAlloc'>,
           'FlsFree': <class 'angr.procedures.win32.local_storage.FlsFree'>,
           'FlsGetValue': <class 'angr.procedures.win32.local_storage.FlsGetValue'>,
           'FlsSetValue': <class 'angr.procedures.win32.local_storage.FlsSetValue'>,
           'GetCommandLineA': <class 'angr.procedures.win32.GetCommandLine.GetCommandLineA'>,
           'GetCommandLineW': <class 'angr.procedures.win32.GetCommandLine.GetCommandLineW'>,
           'GetCurrentProcessId': <class 'angr.procedures.win32.GetCurrentProcessId.GetCurrentProcessId'>,
           'GetCurrentThreadId': <class 'angr.procedures.win32.GetCurrentThreadId.GetCurrentThreadId'>,
           'GetLastInputInfo': <class 'angr.procedures.win32.GetLastInputInfo.GetLastInputInfo'>,
           'GetLocalTime': <class 'angr.procedures.win32.sim_time.GetLocalTime'>,
           'GetModuleHandleA': <class 'angr.procedures.win32.GetModuleHandle.GetModuleHandleA'>,
           'GetModuleHandleW': <class 'angr.procedures.win32.GetModuleHandle.GetModuleHandleW'>,
           'GetProcAddress': <class 'angr.procedures.win32.dynamic_loading.GetProcAddress'>,
           'GetProcessAffinityMask': <class 'angr.procedures.win32.GetProcessAffinityMask.GetProcessAffinityMask'>,
           'GetProcessHeap': <class 'angr.procedures.win32.heap.GetProcessHeap'>,
           'GetStdHandle': <class 'angr.procedures.win32.file_handles.GetStdHandle'>,
           'GetSystemTimeAsFileTime': <class 'angr.procedures.win32.sim_time.GetSystemTimeAsFileTime'>,
           'GetTempPathA': <class 'angr.procedures.win32.system_paths.GetTempPathA'>,
           'GetTickCount': <class 'angr.procedures.win32.sim_time.GetTickCount'>,
           'GetTickCount64': <class 'angr.procedures.win32.sim_time.GetTickCount64'>,
           'GetWindowsDirectoryA': <class 'angr.procedures.win32.system_paths.GetWindowsDirectoryA'>,
           'GlobalAlloc': <class 'angr.procedures.win32.heap.GlobalAlloc'>,
           'HeapAlloc': <class 'angr.procedures.win32.heap.HeapAlloc'>,
           'HeapCreate': <class 'angr.procedures.win32.heap.HeapCreate'>,
           'HeapFree': <class 'angr.procedures.win32.heap.HeapFree'>,
           'HeapReAlloc': <class 'angr.procedures.win32.heap.HeapReAlloc'>,
           'InitializeCriticalSectionAndSpinCount': <class 'angr.procedures.win32.critical_section.InitializeCriticalSectionAndSpinCount'>,
           'InitializeCriticalSectionEx': <class 'angr.procedures.win32.critical_section.InitializeCriticalSectionEx'>,
           'InterlockedExchange': <class 'angr.procedures.win32.InterlockedExchange.InterlockedExchange'>,
           'IsBadCodePtr': <class 'angr.procedures.win32.is_bad_ptr.IsBadCodePtr'>,
           'IsBadReadPtr': <class 'angr.procedures.win32.is_bad_ptr.IsBadReadPtr'>,
           'IsBadWritePtr': <class 'angr.procedures.win32.is_bad_ptr.IsBadWritePtr'>,
           'IsProcessorFeaturePresent': <class 'angr.procedures.win32.IsProcessorFeaturePresent.IsProcessorFeaturePresent'>,
           'LoadLibraryA': <class 'angr.procedures.win32.dynamic_loading.LoadLibraryA'>,
           'LoadLibraryExW': <class 'angr.procedures.win32.dynamic_loading.LoadLibraryExW'>,
           'QueryPerformanceCounter': <class 'angr.procedures.win32.sim_time.QueryPerformanceCounter'>,
           'ReadFile': <class 'angr.procedures.win32.file_handles.ReadFile'>,
           'TlsAlloc': <class 'angr.procedures.win32.local_storage.TlsAlloc'>,
           'TlsFree': <class 'angr.procedures.win32.local_storage.TlsFree'>,
           'TlsGetValue': <class 'angr.procedures.win32.local_storage.TlsGetValue'>,
           'TlsSetValue': <class 'angr.procedures.win32.local_storage.TlsSetValue'>,
           'VirtualAlloc': <class 'angr.procedures.win32.VirtualAlloc.VirtualAlloc'>,
           'VirtualProtect': <class 'angr.procedures.win32.VirtualProtect.VirtualProtect'>,
           'WriteFile': <class 'angr.procedures.win32.file_handles.WriteFile'>,
           'gethostbyname': <class 'angr.procedures.win32.gethostbyname.gethostbyname'>},
 'win_user32': {'CharNextA': <class 'angr.procedures.win_user32.chars.CharNextA'>,
                'CharPrevA': <class 'angr.procedures.win_user32.chars.CharPrevA'>,
                'GetKeyboardType': <class 'angr.procedures.win_user32.keyboard.GetKeyboardType'>,
                'MessageBoxA': <class 'angr.procedures.win_user32.messagebox.MessageBoxA'>,
                'MessageBoxExA': <class 'angr.procedures.win_user32.messagebox.MessageBoxExA'>,
                'MessageBoxExW': <class 'angr.procedures.win_user32.messagebox.MessageBoxExW'>,
                'MessageBoxIndirectA': <class 'angr.procedures.win_user32.messagebox.MessageBoxIndirectA'>,
                'MessageBoxIndirectW': <class 'angr.procedures.win_user32.messagebox.MessageBoxIndirectW'>,
                'MessageBoxW': <class 'angr.procedures.win_user32.messagebox.MessageBoxW'>}}

Process finished with exit code 0
